4.0.16: Remove direct pointer from class3d protocol
4.0.15: Extending the conversion of incompatibles formats (Yunior)
4.0.14: 2D class ranker improvements (JMRT)
    - Generated outputParticles
    - outputClasses now have rlnEstimatedResolution and rlnPredictedClassScore attributes
    - Improved summary using summaryVar and handling when no output
    - Added viewer for RelionSelect2DClasses
4.0.13: fix relion-python env for 2D class ranker, requires a specific pytorch version
4.0.12:
    - remove reading optimiser file during particles import (fix #373)
4.0.11:
    - fixed the bug calling system python instead of conda env's one in relion class selection protocol
4.0.10:
    - allow to force assign a single optics group to a multi-group input
    - in the protocol Classify2D when defining the output Classes, particles should be assigned with an indirect pointer to avoid problems when running workflows on streaming and unattended.
    - in the protocol Extract particles the boxsize validator (positive) prevented the protocol from executing when an inputPointer was used to fill this parameter.
    - relion 3.1 removed from the installer
    - add missing _pathVars to Plugin class
4.0.9: fix output pixel size in the resize volume protocol
4.0.8: better integration with sidesplitter plugin
4.0.7: fix typo in half2 output name from multi-body protocol
4.0.6:
    - add possible outputs class
    - fake a mask to bypass Relion multi-body bug
    - add continue mode for multi-body
    - output particle set from multi-body
    - subtract protocol supports mukti-body input
4.0.5.1: hotfix for multi-body protocol
4.0.5: hotfix for GPU parameters
4.0.4:
    - removed RELION_PYTHON, replaced by conda env variable RELION_ENV_ACTIVATION
    - update citations
    - fix parsing of pixel size upon import
    - fix wrong kwarg name useBaseName which caused ignoring micnames in export protocols
    - fix assign optics when some mics are missing (@delarosatrevin)
4.0.3:
    - allowPointers for box size related parameters
    - new protocol: import coordinates from a particles star file
    - remove :mrc postfix from volume names if possible
4.0.2: minor fix for auto-picking ref-based protocol
4.0.1:
    - Postprocessing now supports half maps input
    - emtable requirement updated
    - close #325 by providing some column types to particle Tables
4.0:
    - Relion 4.0 support:
        - download sources from github
        - all protocols updated with new args / params
        - new 2D class ranker protocol (test still missing)
        - new env var RELION_PYTHON for Python with Torch & Numpy modules (required for the protocol above)
        - separate initial model protocol for 4.0 (3.x is incompatible)
        - float16 option disabled
        - EER enabled, needs more testing
        - BUGFIX: wrong shifts were saved in motioncor when skipping frames
        - rlnMicrographStartFrame is saved in optics for mc output movies
        - Multi-body protocol improvements, viewer added
        - Postprocessing now supports multi-body input
3.1.3: fix ref volume conversion for non-mrc files
3.1.2:
    - allow to use Environ.setPrepend (depends on scipion-em/scipion-pyworkflow#238) to set different prepend commands (e.g when optimized CPU module is available)
    - fixes for subtract no relion protocol
    - fix #294, #296
3.1.1 - fixed the bug causing wrong shifts saved by init model and subtract protocols
3.1:
    - initial EER support for motion correction and polishing, not available yet
    - consider hot pixels from relion mc for polishing
    - refactor mc protocol and viewer
    - replace xmipp by eman2 for psd calculation
    - add 3.1.2 binary
    - remove Relion 3.0 protocols and code, but users can still import old star files
    - fix #278, #274, #277, #257
    - add a test to read old star format
    - fix shifts conversion for pre-3.1 (origins are in px already)
    - fix accuracy label, use Angstroms by default
    - add a warning about polishing gain bug
    - subtract protocol supports non-Relion input (thanks @rmarabini)
    - add a protocol to "gentle clean" all Relion jobs
3.0.4: bugfix for the missing option "Consider alignment as priors" (reported by Serban Ilca)
3.0.3: another bugfix in assign optics: abs paths are not allowed by Relion
3.0.2: bugfix for the wrong gain transform parameters in assign optics protocol
3.0.1:
    - quick fixes for issues from PR #282, #283 (thanks to @rmarabini)
3.0.0:
    - Scipion 3.0.0 support, migration to python 3
    - GPLv2 to v3
    - Add Relion 3.1 support, remove relion 2.x support
    - New STAR file parser (emtable package)
    - New protocol to assign optics groups
    - Sort protocol will be deleted soon (gone in relion 3.1)
    - Extract particle movies is gone
    - Updated drift plot for motioncor, added new plot for drift per frame
    - convertMask changed so that it uses relion_image_handler to change box/pix size/threshold
    - movie refinement is gone and fully replaced by bayesian polishing
    - picker protocols code cleanup
    - get rid of shell=true in subprocess
    - refactor viewers code
    - xmipp metadata is gradually replaced by the Table class from new star file parser
    - new protocol to export coordinates to star format
    - new protocol to remove preferential views
    - new protocol to compress movies
    - new protocol to resize / rescale volume
    - add new Falcon 4 MTFs
    - updated extra labels list for particles
    - set PARTICLE_EXTRA_LABELS inside ClassesLoader and refine3d _updateParticle
    - fill random subset by default
    - Autoscale input vol refs with relion not xmipp
    - Add missing ProtRelionExportParticles to protocol tree
    - Fix default values for missing extra ctf attrs
    - Use abs paths when creating symlinks
    - Add warning about dm4 gain flip by xmipp
    - Optimize imports
    - Assign gain and defects file from input or star file, transform gain if required
    - use getVar for cuda vars
    - update optics from image set upon conversion
    - fix wrong MicrographOriginalPixelSize
    - update priors help
    - add PSD calculation for mc
    - add missing frame grouping param for mc
    - picking wizards removed
    - optimize mode removed in relion reference-based picker
    - fix --odir param for pickers
    - add min_avg_noise to picker
    - add skip_gridding to 3d jobs (True by default)
    - add missing flatten_solvent to init3d
    - remove unrequired params from polishing
    - add RELION_CUDA_LIB var
    - Hide Allow coarser sampling if doing no alignments
    - Hide some args in continue mode for classification/refinement/init model protocols
    - Fix healpix arg for autopicking, add missing ctf param
    - Fixed matching between particles and movies by using micName in polishing
    - Fixed generation of the local motion table when needed (e.g when only some movies failed to align)
    - Allowed to display ctf-refinement results with matplotlib (still need to find the proper color map)
    - Fixed function splitCTFGroups, now replaced with class DefocusGroups and not using Xmipp metadata
    - Now use proper pixelSize label depending on input set
    - Remove failing reconstruct rot-shift-flip test as we don't support flip in 3D
    - add the colorScale wizard to the LocalRes viewer
    - chimeraX support
1.0.9: Fixed multibody output bug. Added a test for it.
1.0.8:
    - Fixed bug when creating symbolic links from binaries with different root
    - Fixed a few visualization issues from Relion - initial volume viewer
    - Fixed dose-weighting bug when no dose was provided
    - Fixed wrong pixsize in particle extraction
    - Fixed polishing bug to ignore particles from missing movies
1.0.7: Add missing MTF files to the pypi plugin
1.0.6: Fix reconstruction and extract ptcls tests
1.0.5:
    - wizard for MTF files in post-processing
    - fix mask scaling in several protocols
    - fix multi-body protocol bugs
    - remove unnecessary symlinks
    - fix motioncor output
    - new test for relion3 protocols
    - many small fixes
1.0.4: Fix post-processing test, improvements in ctf refine viewer
1.0.3: Big update for relion3.0 support
1.0.2: Include protocol.conf to create the source distribution
1.0.1:
	- add missing protocol for movie ptcl extraction, other small bugfixes
	- updated viewers import, added protocols.conf
	- remove xmipp3 dependencies
	- updated citations
	- remove relion 1.4 support
11-September-2018 - Add pip module file
